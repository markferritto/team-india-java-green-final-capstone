{"remainingRequest":"C:\\Users\\Student\\source\\repos\\pairs\\team-india-java-green-final-capstone\\vue - Copy\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Student\\source\\repos\\pairs\\team-india-java-green-final-capstone\\vue - Copy\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Student\\source\\repos\\pairs\\team-india-java-green-final-capstone\\vue - Copy\\src\\router\\index.js","dependencies":[{"path":"C:\\Users\\Student\\source\\repos\\pairs\\team-india-java-green-final-capstone\\vue - Copy\\src\\router\\index.js","mtime":1628108345454},{"path":"C:\\Users\\Student\\source\\repos\\pairs\\team-india-java-green-final-capstone\\vue - Copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Student\\source\\repos\\pairs\\team-india-java-green-final-capstone\\vue - Copy\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Student\\source\\repos\\pairs\\team-india-java-green-final-capstone\\vue - Copy\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZS5qcyI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFJvdXRlciBmcm9tICd2dWUtcm91dGVyJzsKaW1wb3J0IEhvbWUgZnJvbSAnLi4vdmlld3MvSG9tZS52dWUnOwppbXBvcnQgTG9naW4gZnJvbSAnLi4vdmlld3MvTG9naW4udnVlJzsKaW1wb3J0IExvZ291dCBmcm9tICcuLi92aWV3cy9Mb2dvdXQudnVlJzsKaW1wb3J0IFJlZ2lzdGVyIGZyb20gJy4uL3ZpZXdzL1JlZ2lzdGVyLnZ1ZSc7CmltcG9ydCBzdG9yZSBmcm9tICcuLi9zdG9yZS9pbmRleCc7CmltcG9ydCBCcmV3ZXJpZXMgZnJvbSAnQC92aWV3cy9CcmV3ZXJpZXMudnVlJzsKaW1wb3J0IFNpbmdsZUJyZXdlcnkgZnJvbSAnQC92aWV3cy9TaW5nbGVCcmV3ZXJ5LnZ1ZSc7CmltcG9ydCBPcGVuQnJld2VyeSBmcm9tICdAL3ZpZXdzL09wZW5CcmV3ZXJ5LnZ1ZSc7ClZ1ZS51c2UoUm91dGVyKTsKLyoqDQogKiBUaGUgVnVlIFJvdXRlciBpcyB1c2VkIHRvICJkaXJlY3QiIHRoZSBicm93c2VyIHRvIHJlbmRlciBhIHNwZWNpZmljIHZpZXcgY29tcG9uZW50DQogKiBpbnNpZGUgb2YgQXBwLnZ1ZSBkZXBlbmRpbmcgb24gdGhlIFVSTC4NCiAqDQogKiBJdCBhbHNvIGlzIHVzZWQgdG8gZGV0ZWN0IHdoZXRoZXIgb3Igbm90IGEgcm91dGUgcmVxdWlyZXMgdGhlIHVzZXIgdG8gaGF2ZSBmaXJzdCBhdXRoZW50aWNhdGVkLg0KICogSWYgdGhlIHVzZXIgaGFzIG5vdCB5ZXQgYXV0aGVudGljYXRlZCAoYW5kIG5lZWRzIHRvKSB0aGV5IGFyZSByZWRpcmVjdGVkIHRvIC9sb2dpbg0KICogSWYgdGhleSBoYXZlIChvciBkb24ndCBuZWVkIHRvKSB0aGV5J3JlIGFsbG93ZWQgdG8gZ28gYWJvdXQgdGhlaXIgd2F5Lg0KICovCgp2YXIgcm91dGVyID0gbmV3IFJvdXRlcih7CiAgbW9kZTogJ2hpc3RvcnknLAogIGJhc2U6IHByb2Nlc3MuZW52LkJBU0VfVVJMLAogIHJvdXRlczogW3sKICAgIHBhdGg6ICcvJywKICAgIG5hbWU6ICdob21lJywKICAgIGNvbXBvbmVudDogSG9tZSwKICAgIG1ldGE6IHsKICAgICAgcmVxdWlyZXNBdXRoOiB0cnVlCiAgICB9CiAgfSwgewogICAgcGF0aDogIi9sb2dpbiIsCiAgICBuYW1lOiAibG9naW4iLAogICAgY29tcG9uZW50OiBMb2dpbiwKICAgIG1ldGE6IHsKICAgICAgcmVxdWlyZXNBdXRoOiBmYWxzZQogICAgfQogIH0sIHsKICAgIHBhdGg6ICIvbG9nb3V0IiwKICAgIG5hbWU6ICJsb2dvdXQiLAogICAgY29tcG9uZW50OiBMb2dvdXQsCiAgICBtZXRhOiB7CiAgICAgIHJlcXVpcmVzQXV0aDogZmFsc2UKICAgIH0KICB9LCB7CiAgICBwYXRoOiAiL3JlZ2lzdGVyIiwKICAgIG5hbWU6ICJyZWdpc3RlciIsCiAgICBjb21wb25lbnQ6IFJlZ2lzdGVyLAogICAgbWV0YTogewogICAgICByZXF1aXJlc0F1dGg6IGZhbHNlCiAgICB9CiAgfSwgewogICAgcGF0aDogJy9icmV3ZXJ5JywKICAgIG5hbWU6ICdicmV3ZXJpZXMnLAogICAgY29tcG9uZW50OiBCcmV3ZXJpZXMKICB9LCB7CiAgICBwYXRoOiAnL2JyZXdlcnkvOmlkJywKICAgIG5hbWU6ICdzaW5nbGUtYnJld2VyeScsCiAgICBjb21wb25lbnQ6IFNpbmdsZUJyZXdlcnkKICB9LCB7CiAgICBwYXRoOiAiL09wZW5CcmV3ZXJ5IiwKICAgIG5hbWU6ICJvcGVuLWJyZXdlcnkiLAogICAgY29tcG9uZW50OiBPcGVuQnJld2VyeQogIH1dCn0pOwpyb3V0ZXIuYmVmb3JlRWFjaChmdW5jdGlvbiAodG8sIGZyb20sIG5leHQpIHsKICAvLyBEZXRlcm1pbmUgaWYgdGhlIHJvdXRlIHJlcXVpcmVzIEF1dGhlbnRpY2F0aW9uCiAgdmFyIHJlcXVpcmVzQXV0aCA9IHRvLm1hdGNoZWQuc29tZShmdW5jdGlvbiAoeCkgewogICAgcmV0dXJuIHgubWV0YS5yZXF1aXJlc0F1dGg7CiAgfSk7IC8vIElmIGl0IGRvZXMgYW5kIHRoZXkgYXJlIG5vdCBsb2dnZWQgaW4sIHNlbmQgdGhlIHVzZXIgdG8gIi9sb2dpbiIKCiAgaWYgKHJlcXVpcmVzQXV0aCAmJiBzdG9yZS5zdGF0ZS50b2tlbiA9PT0gJycpIHsKICAgIG5leHQoIi9sb2dpbiIpOwogIH0gZWxzZSB7CiAgICAvLyBFbHNlIGxldCB0aGVtIGdvIHRvIHRoZWlyIG5leHQgZGVzdGluYXRpb24KICAgIG5leHQoKTsKICB9Cn0pOwpleHBvcnQgZGVmYXVsdCByb3V0ZXI7"},{"version":3,"sources":["C:/Users/Student/source/repos/pairs/team-india-java-green-final-capstone/vue - Copy/src/router/index.js"],"names":["Vue","Router","Home","Login","Logout","Register","store","Breweries","SingleBrewery","OpenBrewery","use","router","mode","base","process","env","BASE_URL","routes","path","name","component","meta","requiresAuth","beforeEach","to","from","next","matched","some","x","state","token"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEAT,GAAG,CAACU,GAAJ,CAAQT,MAAR;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMU,MAAM,GAAG,IAAIV,MAAJ,CAAW;AACxBW,EAAAA,IAAI,EAAE,SADkB;AAExBC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAFM;AAGxBC,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,SAAS,EAAElB,IAHb;AAIEmB,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GADM,EASN;AACEJ,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,SAAS,EAAEjB,KAHb;AAIEkB,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GATM,EAiBN;AACEJ,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,SAAS,EAAEhB,MAHb;AAIEiB,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GAjBM,EAyBN;AACEJ,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,SAAS,EAAEf,QAHb;AAIEgB,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GAzBM,EAiCN;AACEJ,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,SAAS,EAAEb;AAHb,GAjCM,EAsCN;AACEW,IAAAA,IAAI,EAAE,cADR;AAEEC,IAAAA,IAAI,EAAE,gBAFR;AAGEC,IAAAA,SAAS,EAAEZ;AAHb,GAtCM,EA2CN;AACEU,IAAAA,IAAI,EAAE,cADR;AAEEC,IAAAA,IAAI,EAAE,cAFR;AAGEC,IAAAA,SAAS,EAAEX;AAHb,GA3CM;AAHgB,CAAX,CAAf;AAsDAE,MAAM,CAACY,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpC;AACA,MAAMJ,YAAY,GAAGE,EAAE,CAACG,OAAH,CAAWC,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACR,IAAF,CAAOC,YAAX;AAAA,GAAjB,CAArB,CAFoC,CAIpC;;AACA,MAAIA,YAAY,IAAIhB,KAAK,CAACwB,KAAN,CAAYC,KAAZ,KAAsB,EAA1C,EAA8C;AAC5CL,IAAAA,IAAI,CAAC,QAAD,CAAJ;AACD,GAFD,MAEO;AACL;AACAA,IAAAA,IAAI;AACL;AACF,CAXD;AAaA,eAAef,MAAf","sourcesContent":["import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport Home from '../views/Home.vue'\r\nimport Login from '../views/Login.vue'\r\nimport Logout from '../views/Logout.vue'\r\nimport Register from '../views/Register.vue'\r\nimport store from '../store/index'\r\nimport Breweries from '@/views/Breweries.vue'\r\nimport SingleBrewery from '@/views/SingleBrewery.vue'\r\nimport OpenBrewery from '@/views/OpenBrewery.vue'\r\n\r\nVue.use(Router)\r\n\r\n/**\r\n * The Vue Router is used to \"direct\" the browser to render a specific view component\r\n * inside of App.vue depending on the URL.\r\n *\r\n * It also is used to detect whether or not a route requires the user to have first authenticated.\r\n * If the user has not yet authenticated (and needs to) they are redirected to /login\r\n * If they have (or don't need to) they're allowed to go about their way.\r\n */\r\n\r\nconst router = new Router({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'home',\r\n      component: Home,\r\n      meta: {\r\n        requiresAuth: true\r\n      }\r\n    },\r\n    {\r\n      path: \"/login\",\r\n      name: \"login\",\r\n      component: Login,\r\n      meta: {\r\n        requiresAuth: false\r\n      }\r\n    },\r\n    {\r\n      path: \"/logout\",\r\n      name: \"logout\",\r\n      component: Logout,\r\n      meta: {\r\n        requiresAuth: false\r\n      }\r\n    },\r\n    {\r\n      path: \"/register\",\r\n      name: \"register\",\r\n      component: Register,\r\n      meta: {\r\n        requiresAuth: false\r\n      }\r\n    },\r\n    {\r\n      path: '/brewery',\r\n      name: 'breweries',\r\n      component: Breweries\r\n    },\r\n    {\r\n      path: '/brewery/:id',\r\n      name: 'single-brewery',\r\n      component: SingleBrewery\r\n    },\r\n    {\r\n      path: \"/OpenBrewery\",\r\n      name: \"open-brewery\",\r\n      component: OpenBrewery,\r\n    },\r\n  ]\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  // Determine if the route requires Authentication\r\n  const requiresAuth = to.matched.some(x => x.meta.requiresAuth);\r\n\r\n  // If it does and they are not logged in, send the user to \"/login\"\r\n  if (requiresAuth && store.state.token === '') {\r\n    next(\"/login\");\r\n  } else {\r\n    // Else let them go to their next destination\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"]}]}